import type { Hooks } from './types';
export declare const DEFAULT_CONFIGS: () => {
    specs: never[];
    suites: {};
    exclude: never[];
    outputDir: undefined;
    logLevel: "info";
    logLevels: {};
    excludeDriverLogs: never[];
    bail: number;
    waitforInterval: number;
    waitforTimeout: number;
    framework: "mocha";
    reporters: never[];
    services: never[];
    maxInstances: number;
    maxInstancesPerCapability: number;
    filesToWatch: never[];
    connectionRetryTimeout: number;
    connectionRetryCount: number;
    execArgv: never[];
    runnerEnv: {};
    runner: "local";
    mochaOpts: {
        timeout: number;
    };
    jasmineNodeOpts: {
        defaultTimeoutInterval: number;
    };
    cucumberOpts: {
        timeout: number;
    };
    onPrepare: never[];
    onWorkerStart: never[];
    before: never[];
    beforeSession: never[];
    beforeSuite: never[];
    beforeHook: never[];
    beforeTest: never[];
    beforeCommand: never[];
    afterCommand: never[];
    afterTest: never[];
    afterHook: never[];
    afterSuite: never[];
    afterSession: never[];
    after: never[];
    onComplete: never[];
    onReload: never[];
    beforeFeature: never[];
    beforeScenario: never[];
    beforeStep: never[];
    afterStep: never[];
    afterScenario: never[];
    afterFeature: never[];
};
export declare const SUPPORTED_HOOKS: (keyof Hooks)[];
export declare const SUPPORTED_FILE_EXTENSIONS: string[];
//# sourceMappingURL=constants.d.ts.map